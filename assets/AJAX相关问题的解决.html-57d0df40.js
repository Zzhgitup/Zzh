import{_ as a,o as _,c as s,f as o,a as e}from"./app-bebbc25d.js";const t={},c=e("p",null,"AJAX 是一默认是异步的程序，AJAX 执行的时候是没有顺序性的，就在第一个接口还没有把返回的数据传入 dom 时，就已经执行其他代码了，如果在这完成之前去用 js 去获取用 ajax 加入 dom 的元素，是获取不到的，但是在一些小型的请求可通过把 ajax 中的 async=flase，设置成同步，就能够在 ajax 完全执行完成之后，在进行之后的代码，就能够用 js 获取到动态添加的内容了。",-1),n=e("p",null,"但是这不是一个好方法，只能满足小型请求是不行的 ，JavaScript 会等到服务器响应就绪才继续执行。如果服务器繁忙或缓慢，应用程序会挂起或停止，也可以在开启异步时，在 ajax 的回调函数中去对动态添加的元素进行获取；绑定事件。这是一个挺好用的方法，",-1),l=e("p",null,"还有一个方法，这不是一个好方法，但是我觉得还挺有意思，在 js 中设置一个定时器，把对动态添加的内容执行的函数放到里面，这样无论什么时候 ajax 加载完成，定时器在反复的寻找需要绑定函数的内容，找到了，就绑定；（感觉有 bug，可能和网速有关系。尽量不用）",-1),r=e("p",null,"之后继续学习 es6 的规则；应用到代码中，再深入了解了解 ajax，还有 jq 工具库。",-1);function d(m,i){return _(),s("div",null,[o("more"),c,n,l,r])}const u=a(t,[["render",d],["__file","AJAX相关问题的解决.html.vue"]]);export{u as default};
