const s=JSON.parse('{"key":"v-8d1b62cc","path":"/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%89%8B%E5%86%99Promise.html","title":"手写Promise🧐简单版🚩","lang":"zh-CN","frontmatter":{"title":"手写Promise🧐简单版🚩","date":"2023-04-09T10:19:00.000Z","icon":"blog","tag":["javascript"],"category":["记录"],"description":"class MyPromise { constructor(executor) { // 初始化state为等待态 this.state = \\"pending\\"; // 成功的值 this.value = undefined; // 失败的原因 this.reason = undefined; let resolve = (value) =&gt; { // state改变,resolve调用就会失败 if (this.state === \\"pending\\") { // resolve调用后，state转化为成功态 this.state = \\"fulfilled\\"; // 储存成功的值 this.value = value; } }; let reject = (reason) =&gt; { // state改变,reject调用就会失败 if (this.state === \\"pending\\") { // reject调用后，state转化为失败态 this.state = \\"rejected\\"; // 储存失败的原因 this.reason = reason; } }; // 如果executor执行报错，直接执行reject try { executor(resolve, reject); } catch (err) { reject(err); } } then(onFulfilled, onRejected) { // 状态为fulfilled，执行onFulfilled，传入成功的值 if (this.state === \\"fulfilled\\") { onFulfilled(this.value); } // 状态为rejected，执行onRejected，传入失败的原因 if (this.state === \\"rejected\\") { onRejected(this.reason); } } }","head":[["meta",{"property":"og:url","content":"https://oragekk.me/Zzh/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%89%8B%E5%86%99Promise.html"}],["meta",{"property":"og:site_name","content":"ZiHao Blog"}],["meta",{"property":"og:title","content":"手写Promise🧐简单版🚩"}],["meta",{"property":"og:description","content":"class MyPromise { constructor(executor) { // 初始化state为等待态 this.state = \\"pending\\"; // 成功的值 this.value = undefined; // 失败的原因 this.reason = undefined; let resolve = (value) =&gt; { // state改变,resolve调用就会失败 if (this.state === \\"pending\\") { // resolve调用后，state转化为成功态 this.state = \\"fulfilled\\"; // 储存成功的值 this.value = value; } }; let reject = (reason) =&gt; { // state改变,reject调用就会失败 if (this.state === \\"pending\\") { // reject调用后，state转化为失败态 this.state = \\"rejected\\"; // 储存失败的原因 this.reason = reason; } }; // 如果executor执行报错，直接执行reject try { executor(resolve, reject); } catch (err) { reject(err); } } then(onFulfilled, onRejected) { // 状态为fulfilled，执行onFulfilled，传入成功的值 if (this.state === \\"fulfilled\\") { onFulfilled(this.value); } // 状态为rejected，执行onRejected，传入失败的原因 if (this.state === \\"rejected\\") { onRejected(this.reason); } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-23T03:49:02.000Z"}],["meta",{"property":"article:author","content":"ZiHao"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:published_time","content":"2023-04-09T10:19:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-23T03:49:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写Promise🧐简单版🚩\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-09T10:19:00.000Z\\",\\"dateModified\\":\\"2023-07-23T03:49:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZiHao\\",\\"url\\":\\"https://orgaekk.me\\"}]}"]]},"headers":[],"git":{"createdTime":1690084142000,"updatedTime":1690084142000,"contributors":[{"name":"Zzhgitup","email":"99540215+Zzhgitup@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.65,"words":196},"filePathRelative":"blog/学习笔记/手写Promise.md","localizedDate":"2023年4月9日","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">class</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E5C07B\\">MyPromise</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #C678DD\\">constructor</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E06C75; font-style: italic\\">executor</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">// 初始化state为等待态</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">state</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"pending\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">// 成功的值</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">value</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">undefined</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">// 失败的原因</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">reason</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">undefined</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">let</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">resolve</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #E06C75; font-style: italic\\">value</span><span style=\\"color: #ABB2BF\\">) </span><span style=\\"color: #C678DD\\">=&gt;</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #7F848E; font-style: italic\\">// state改变,resolve调用就会失败</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">state</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">===</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"pending\\"</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #7F848E; font-style: italic\\">// resolve调用后，state转化为成功态</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">state</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"fulfilled\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #7F848E; font-style: italic\\">// 储存成功的值</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">value</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75\\">value</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    };</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">let</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #61AFEF\\">reject</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #E06C75; font-style: italic\\">reason</span><span style=\\"color: #ABB2BF\\">) </span><span style=\\"color: #C678DD\\">=&gt;</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #7F848E; font-style: italic\\">// state改变,reject调用就会失败</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">state</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">===</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"pending\\"</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #7F848E; font-style: italic\\">// reject调用后，state转化为失败态</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">state</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"rejected\\"</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #7F848E; font-style: italic\\">// 储存失败的原因</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">        </span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">reason</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75\\">reason</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    };</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">// 如果executor执行报错，直接执行reject</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">try</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #61AFEF\\">executor</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E06C75\\">resolve</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #E06C75\\">reject</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    } </span><span style=\\"color: #C678DD\\">catch</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #E06C75\\">err</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #61AFEF\\">reject</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E06C75\\">err</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #61AFEF\\">then</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E06C75; font-style: italic\\">onFulfilled</span><span style=\\"color: #ABB2BF\\">, </span><span style=\\"color: #E06C75; font-style: italic\\">onRejected</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">// 状态为fulfilled，执行onFulfilled，传入成功的值</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">state</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">===</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"fulfilled\\"</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #61AFEF\\">onFulfilled</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">value</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #7F848E; font-style: italic\\">// 状态为rejected，执行onRejected，传入失败的原因</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    </span><span style=\\"color: #C678DD\\">if</span><span style=\\"color: #ABB2BF\\"> (</span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">state</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">===</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #98C379\\">\\"rejected\\"</span><span style=\\"color: #ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">      </span><span style=\\"color: #61AFEF\\">onRejected</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">this</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">reason</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">    }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"ZiHao","license":"CC BY-NC-SA 4.0"},"autoDesc":true}');export{s as data};
