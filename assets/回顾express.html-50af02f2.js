import{_ as i,r,o as s,c as t,f as d,a,b as e,d as o,e as c}from"./app-bebbc25d.js";const g={},p=a("h2",{id:"_1-express-是什么",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-express-是什么","aria-hidden":"true"},"#"),e(" 1.express 是什么")],-1),l={href:"https://so.csdn.net/so/search?q=Node&spm=1001.2101.3001.7020",title:"Node",target:"_blank",rel:"noopener noreferrer"},b=c('<h2 id="_2-express-框架特性" tabindex="-1"><a class="header-anchor" href="#_2-express-框架特性" aria-hidden="true">#</a> 2 .Express 框架特性</h2><ul><li>提供了<strong>简洁的路由定义</strong>方式</li><li>对获取 http <strong>请求参数</strong>进行了<strong>简化处理</strong></li><li>对<strong>模板引擎支持程度高</strong>，方便渲染动态 HTML 页面</li><li>拥有<strong>中间件</strong>机制有效<strong>控制 HTTP 请求</strong></li><li>拥有大量第三方中间件对功能进行扩展</li></ul><h2 id="_3-原生-node-js-与-express-框架对比" tabindex="-1"><a class="header-anchor" href="#_3-原生-node-js-与-express-框架对比" aria-hidden="true">#</a> 3 .原生 node.js 与 Express 框架对比</h2><figure><img src="https://img-blog.csdnimg.cn/422f6da8b6d34336ae69e70859163419.png" alt="422f6da8b6d34336ae69e70859163419.png" tabindex="0" loading="lazy"><figcaption>422f6da8b6d34336ae69e70859163419.png</figcaption></figure><figure><img src="https://img-blog.csdnimg.cn/e9c435389c0542b5b5da8e592be66431.png" alt="e9c435389c0542b5b5da8e592be66431.png" tabindex="0" loading="lazy"><figcaption>e9c435389c0542b5b5da8e592be66431.png</figcaption></figure><h2 id="_4-中间件" tabindex="-1"><a class="header-anchor" href="#_4-中间件" aria-hidden="true">#</a> 4.中间件</h2><figure><img src="https://img-blog.csdnimg.cn/55bd7475882742339b921dc03a8d95e8.png" alt="55bd7475882742339b921dc03a8d95e8.png" tabindex="0" loading="lazy"><figcaption>55bd7475882742339b921dc03a8d95e8.png</figcaption></figure><figure><img src="https://img-blog.csdnimg.cn/647096f6d82246239deb7a99732285b2.png" alt="647096f6d82246239deb7a99732285b2.png" tabindex="0" loading="lazy"><figcaption>647096f6d82246239deb7a99732285b2.png</figcaption></figure><figure><img src="https://img-blog.csdnimg.cn/27cf49b6412f40669e23658c0d81748b.png" alt="27cf49b6412f40669e23658c0d81748b.png" tabindex="0" loading="lazy"><figcaption>27cf49b6412f40669e23658c0d81748b.png</figcaption></figure><h2 id="_5-中间件应用" tabindex="-1"><a class="header-anchor" href="#_5-中间件应用" aria-hidden="true">#</a> 5   中间件应用</h2><h3 id="路由保护" tabindex="-1"><a class="header-anchor" href="#路由保护" aria-hidden="true">#</a> 路由保护：</h3><p>客户端在访问需要登录的页面时，可以先使用中间件判断用户登录状态，用户如果未登录，则拦截请求，直接响应，禁止用户进入需要登录的页面。</p><p>错误处理中间件</p><p>本周还是对项目的完善，使之更加严谨可用，</p>',14);function h(f,_){const n=r("ExternalLinkIcon");return s(),t("div",null,[d("more"),p,a("p",null,[e("Express 是一个基于  "),a("a",l,[e("Node"),o(n)]),e("平台的 Web 应用开发框架，它提供了一系列的强大特性，帮助你创建各种 Web 应用。")]),b])}const m=i(g,[["render",h],["__file","回顾express.html.vue"]]);export{m as default};
