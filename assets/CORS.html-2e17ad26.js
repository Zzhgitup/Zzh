const t=JSON.parse('{"key":"v-6b471b88","path":"/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CORS.html","title":"跨域问题","lang":"zh-CN","frontmatter":{"title":"跨域问题","date":"2022-12-11T08:31:40.000Z","icon":"blog","tag":["CORS"],"category":["记录"],"description":"什么是跨域 浏览器有一个重要的安全策略，称之为[同源策略] 其中，源=协议+主机+端口源=协议+主机+端口源=协议+主机+端口，两个源相同，称之为同源，两个源不同，称之为跨源或跨域。 比如： 源 1 源 2 是否同源 www.baidu.com www.baidu.com/news 是 http://www.baidu.com https://www.baidu.com 否 http://localhost:5000 http://localhost:7000 否 http://localhost:5000 http://127.0.0.1:5000 否 www.baidu.com baidu.com 否 同源策略是指，若页面的源和页面运行过程中加载的源不一致时，出于安全考虑，浏览器会对跨域的资源访问进行一些限制 同源策略对 ajax 的跨域限制的最为凶狠，默认情况下，它不允许 ajax 访问跨域资源 所以，我们通常所说的跨域问题，就是同源策略对 ajax 产生的影响 有多种方式解决跨域问题，常见的有：","head":[["meta",{"property":"og:url","content":"https://oragekk.me/Zzh/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CORS.html"}],["meta",{"property":"og:site_name","content":"ZiHao Blog"}],["meta",{"property":"og:title","content":"跨域问题"}],["meta",{"property":"og:description","content":"什么是跨域 浏览器有一个重要的安全策略，称之为[同源策略] 其中，源=协议+主机+端口源=协议+主机+端口源=协议+主机+端口，两个源相同，称之为同源，两个源不同，称之为跨源或跨域。 比如： 源 1 源 2 是否同源 www.baidu.com www.baidu.com/news 是 http://www.baidu.com https://www.baidu.com 否 http://localhost:5000 http://localhost:7000 否 http://localhost:5000 http://127.0.0.1:5000 否 www.baidu.com baidu.com 否 同源策略是指，若页面的源和页面运行过程中加载的源不一致时，出于安全考虑，浏览器会对跨域的资源访问进行一些限制 同源策略对 ajax 的跨域限制的最为凶狠，默认情况下，它不允许 ajax 访问跨域资源 所以，我们通常所说的跨域问题，就是同源策略对 ajax 产生的影响 有多种方式解决跨域问题，常见的有："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-23T03:49:02.000Z"}],["meta",{"property":"article:author","content":"ZiHao"}],["meta",{"property":"article:tag","content":"CORS"}],["meta",{"property":"article:published_time","content":"2022-12-11T08:31:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-23T03:49:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跨域问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-11T08:31:40.000Z\\",\\"dateModified\\":\\"2023-07-23T03:49:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZiHao\\",\\"url\\":\\"https://orgaekk.me\\"}]}"]]},"headers":[{"level":3,"title":"什么是跨域","slug":"什么是跨域","link":"#什么是跨域","children":[]},{"level":3,"title":"跨域解决办法 1-代理","slug":"跨域解决办法-1-代理","link":"#跨域解决办法-1-代理","children":[]},{"level":3,"title":"解决跨域问题方法 2-JSONP","slug":"解决跨域问题方法-2-jsonp","link":"#解决跨域问题方法-2-jsonp","children":[]},{"level":3,"title":"跨域解决方法 3-CORS","slug":"跨域解决方法-3-cors","link":"#跨域解决方法-3-cors","children":[]},{"level":3,"title":"简单请求的判定","slug":"简单请求的判定","link":"#简单请求的判定","children":[]},{"level":3,"title":"简单请求的交互规范","slug":"简单请求的交互规范","link":"#简单请求的交互规范","children":[]},{"level":3,"title":"学习总结","slug":"学习总结","link":"#学习总结","children":[]}],"git":{"createdTime":1690084142000,"updatedTime":1690084142000,"contributors":[{"name":"Zzhgitup","email":"99540215+Zzhgitup@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7.97,"words":2392},"filePathRelative":"blog/学习笔记/CORS.md","localizedDate":"2022年12月11日","excerpt":"<h3> 什么是跨域</h3>\\n<p>浏览器有一个重要的安全策略，称之为[同源策略]<br>\\n其中，源=协议+主机+端口源=协议+主机+端口源=协议+主机+端口，两个源相同，称之为同源，两个源不同，称之为跨源或跨域。</p>\\n<p>比如：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>源 1</th>\\n<th>源 2</th>\\n<th>是否同源</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\"http://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">www.baidu.com</a></td>\\n<td><a href=\\"http://www.baidu.com/news\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">www.baidu.com/news</a></td>\\n<td>是</td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://www.baidu.com</a></td>\\n<td><a href=\\"https://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.baidu.com</a></td>\\n<td>否</td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://localhost:5000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://localhost:5000</a></td>\\n<td><a href=\\"http://localhost:7000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://localhost:7000</a></td>\\n<td>否</td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://localhost:5000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://localhost:5000</a></td>\\n<td><a href=\\"http://127.0.0.1:5000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://127.0.0.1:5000</a></td>\\n<td>否</td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">www.baidu.com</a></td>\\n<td><a href=\\"http://baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">baidu.com</a></td>\\n<td>否</td>\\n</tr>\\n<tr>\\n<td>同源策略是指，若页面的源和页面运行过程中加载的源不一致时，出于安全考虑，浏览器会对跨域的资源访问进行一些限制</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><img src=\\"https://lmy-1311156074.cos.ap-nanjing.myqcloud.com/test/微信图片_20221211093517.jpg\\" alt=\\"\\" loading=\\"lazy\\"></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>同源策略对 ajax 的跨域限制的最为<em>凶狠</em>，默认情况下，它不允许 ajax 访问跨域资源</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><img src=\\"https://lmy-1311156074.cos.ap-nanjing.myqcloud.com/test/微信图片_20221211093619.jpg\\" alt=\\"\\" loading=\\"lazy\\"></td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>所以，我们通常所说的跨域问题，就是同源策略对 ajax 产生的影响</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>有多种方式解决跨域问题，常见的有：</td>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","copyright":{"author":"ZiHao","license":"CC BY-NC-SA 4.0"},"autoDesc":true}');export{t as data};
