const s=JSON.parse('{"key":"v-7c41fd7f","path":"/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JS%E5%AF%B9%E8%B1%A1%E5%A4%8D%E5%88%B6.html","title":"JS对象复制","lang":"zh-CN","frontmatter":{"title":"JS对象复制","date":"2022-11-27T08:31:40.000Z","icon":"blog","tag":["javascript"],"category":["记录"],"description":"我们知道，赋值运算符不会创建对象的副本，只会分配对它的引用，请看以下代码： let obj = { a: 1, b: 2, }; let copy = obj; obj.a = 5; console.log(copy.a); // Result // a = 5;","head":[["meta",{"property":"og:url","content":"https://oragekk.me/Zzh/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JS%E5%AF%B9%E8%B1%A1%E5%A4%8D%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"ZiHao Blog"}],["meta",{"property":"og:title","content":"JS对象复制"}],["meta",{"property":"og:description","content":"我们知道，赋值运算符不会创建对象的副本，只会分配对它的引用，请看以下代码： let obj = { a: 1, b: 2, }; let copy = obj; obj.a = 5; console.log(copy.a); // Result // a = 5;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-23T03:49:02.000Z"}],["meta",{"property":"article:author","content":"ZiHao"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:published_time","content":"2022-11-27T08:31:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-23T03:49:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS对象复制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-27T08:31:40.000Z\\",\\"dateModified\\":\\"2023-07-23T03:49:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZiHao\\",\\"url\\":\\"https://orgaekk.me\\"}]}"]]},"headers":[{"level":2,"title":"复制对象的简单方法","slug":"复制对象的简单方法","link":"#复制对象的简单方法","children":[]},{"level":2,"title":"浅拷贝对象","slug":"浅拷贝对象","link":"#浅拷贝对象","children":[]},{"level":2,"title":"使用 Object.assign()方法","slug":"使用-object-assign-方法","link":"#使用-object-assign-方法","children":[{"level":3,"title":"Object.assign()的陷阱","slug":"object-assign-的陷阱","link":"#object-assign-的陷阱","children":[]},{"level":3,"title":"深度拷贝对象","slug":"深度拷贝对象","link":"#深度拷贝对象","children":[]},{"level":3,"title":"使用 JSON.parse(JSON.stringify(object));","slug":"使用-json-parse-json-stringify-object","link":"#使用-json-parse-json-stringify-object","children":[]},{"level":3,"title":"复制对象方法","slug":"复制对象方法","link":"#复制对象方法","children":[]},{"level":3,"title":"复制 circular 对象","slug":"复制-circular-对象","link":"#复制-circular-对象","children":[]},{"level":3,"title":"使用 JSON.parse(JSON.stringify(object))","slug":"使用-json-parse-json-stringify-object-1","link":"#使用-json-parse-json-stringify-object-1","children":[]},{"level":3,"title":"使用 Object.assign()","slug":"使用-object-assign","link":"#使用-object-assign","children":[]},{"level":3,"title":"使用展开运算符(…)","slug":"使用展开运算符","link":"#使用展开运算符","children":[]}]}],"git":{"createdTime":1690084142000,"updatedTime":1690084142000,"contributors":[{"name":"Zzhgitup","email":"99540215+Zzhgitup@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.65,"words":1695},"filePathRelative":"blog/学习笔记/JS对象复制.md","localizedDate":"2022年11月27日","excerpt":"<p>我们知道，赋值运算符不会创建对象的副本，只会分配对它的引用，请看以下代码：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color: #282c34\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color: #C678DD\\">let</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75\\">obj</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #E06C75\\">a</span><span style=\\"color: #ABB2BF\\">: </span><span style=\\"color: #D19A66\\">1</span><span style=\\"color: #ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">  </span><span style=\\"color: #E06C75\\">b</span><span style=\\"color: #ABB2BF\\">: </span><span style=\\"color: #D19A66\\">2</span><span style=\\"color: #ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #ABB2BF\\">};</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C678DD\\">let</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75\\">copy</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #E06C75\\">obj</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #E5C07B\\">obj</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">a</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #56B6C2\\">=</span><span style=\\"color: #ABB2BF\\"> </span><span style=\\"color: #D19A66\\">5</span><span style=\\"color: #ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #E5C07B\\">console</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #61AFEF\\">log</span><span style=\\"color: #ABB2BF\\">(</span><span style=\\"color: #E5C07B\\">copy</span><span style=\\"color: #ABB2BF\\">.</span><span style=\\"color: #E06C75\\">a</span><span style=\\"color: #ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">// Result</span></span>\\n<span class=\\"line\\"><span style=\\"color: #7F848E; font-style: italic\\">// a = 5;</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"ZiHao","license":"CC BY-NC-SA 4.0"},"autoDesc":true}');export{s as data};
