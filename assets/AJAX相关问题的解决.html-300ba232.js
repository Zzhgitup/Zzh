const t=JSON.parse('{"key":"v-70e3bbeb","path":"/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/AJAX%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3.html","title":"AJAX相关问题的解决","lang":"zh-CN","frontmatter":{"title":"AJAX相关问题的解决","date":"2022-03-06T11:02:21.000Z","icon":"blog","tag":["axios"],"category":["记录"],"description":"AJAX 是一默认是异步的程序，AJAX 执行的时候是没有顺序性的，就在第一个接口还没有把返回的数据传入 dom 时，就已经执行其他代码了，如果在这完成之前去用 js 去获取用 ajax 加入 dom 的元素，是获取不到的，但是在一些小型的请求可通过把 ajax 中的 async=flase，设置成同步，就能够在 ajax 完全执行完成之后，在进行之后的代码，就能够用 js 获取到动态添加的内容了。 但是这不是一个好方法，只能满足小型请求是不行的 ，JavaScript 会等到服务器响应就绪才继续执行。如果服务器繁忙或缓慢，应用程序会挂起或停止，也可以在开启异步时，在 ajax 的回调函数中去对动态添加的元素进行获取；绑定事件。这是一个挺好用的方法，","head":[["meta",{"property":"og:url","content":"https://oragekk.me/Zzh/blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/AJAX%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3.html"}],["meta",{"property":"og:site_name","content":"ZiHao Blog"}],["meta",{"property":"og:title","content":"AJAX相关问题的解决"}],["meta",{"property":"og:description","content":"AJAX 是一默认是异步的程序，AJAX 执行的时候是没有顺序性的，就在第一个接口还没有把返回的数据传入 dom 时，就已经执行其他代码了，如果在这完成之前去用 js 去获取用 ajax 加入 dom 的元素，是获取不到的，但是在一些小型的请求可通过把 ajax 中的 async=flase，设置成同步，就能够在 ajax 完全执行完成之后，在进行之后的代码，就能够用 js 获取到动态添加的内容了。 但是这不是一个好方法，只能满足小型请求是不行的 ，JavaScript 会等到服务器响应就绪才继续执行。如果服务器繁忙或缓慢，应用程序会挂起或停止，也可以在开启异步时，在 ajax 的回调函数中去对动态添加的元素进行获取；绑定事件。这是一个挺好用的方法，"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-23T03:49:02.000Z"}],["meta",{"property":"article:author","content":"ZiHao"}],["meta",{"property":"article:tag","content":"axios"}],["meta",{"property":"article:published_time","content":"2022-03-06T11:02:21.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-23T03:49:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AJAX相关问题的解决\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-06T11:02:21.000Z\\",\\"dateModified\\":\\"2023-07-23T03:49:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZiHao\\",\\"url\\":\\"https://orgaekk.me\\"}]}"]]},"headers":[],"git":{"createdTime":1690084142000,"updatedTime":1690084142000,"contributors":[{"name":"Zzhgitup","email":"99540215+Zzhgitup@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.35,"words":404},"filePathRelative":"blog/学习笔记/AJAX相关问题的解决.md","localizedDate":"2022年3月6日","excerpt":"<!--more-->\\n<p>AJAX 是一默认是异步的程序，AJAX 执行的时候是没有顺序性的，就在第一个接口还没有把返回的数据传入 dom 时，就已经执行其他代码了，如果在这完成之前去用 js 去获取用 ajax 加入 dom 的元素，是获取不到的，但是在一些小型的请求可通过把 ajax 中的 async=flase，设置成同步，就能够在 ajax 完全执行完成之后，在进行之后的代码，就能够用 js 获取到动态添加的内容了。</p>\\n<p>但是这不是一个好方法，只能满足小型请求是不行的 ，JavaScript 会等到服务器响应就绪才继续执行。如果服务器繁忙或缓慢，应用程序会挂起或停止，也可以在开启异步时，在 ajax 的回调函数中去对动态添加的元素进行获取；绑定事件。这是一个挺好用的方法，</p>","copyright":{"author":"ZiHao","license":"CC BY-NC-SA 4.0"},"autoDesc":true}');export{t as data};
