import{_ as e,o as t,c as i,e as o}from"./app-bebbc25d.js";const l={},p=o('<h3 id="生命周期-新-♥" tabindex="-1"><a class="header-anchor" href="#生命周期-新-♥" aria-hidden="true">#</a> 生命周期（新）♥</h3><p>新版本可以使用旧的生命周期钩子</p><figure><img src="https://lmy-1311156074.cos.ap-nanjing.myqcloud.com/test/react生命周期(新).png" alt="react生命周期(新)" tabindex="0" loading="lazy"><figcaption>react生命周期(新)</figcaption></figure><figure><img src="https://lmy-1311156074.cos.ap-nanjing.myqcloud.com/test/react生命周期(旧).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>新的生命周期钩子中，有三个钩子出现了警告，</p><ul><li><p>componentWillMount</p></li><li><p>componentWillUpdate</p></li><li><p>componentWillReceiveProps</p><p>需要在前方加上 UNSAFE_ React 官方说将在未来会上线异步渲染，这些钩子可能会出现问题</p></li></ul><p>新的钩子：</p><ul><li><p>getDerivedStateFromPorps</p></li><li><p>getSnapshotBeforeUpdate</p><h3 id="getderivedstatefromporps" tabindex="-1"><a class="header-anchor" href="#getderivedstatefromporps" aria-hidden="true">#</a> getDerivedStateFromPorps()</h3><blockquote><p>派生状态</p></blockquote><p>需要加上 static，变为静态方法，这个钩子用途很罕见，这个钩子的原则就是，state 的值在任何时候都取决于 props。</p><h3 id="getsnapshotbeforeupdate" tabindex="-1"><a class="header-anchor" href="#getsnapshotbeforeupdate" aria-hidden="true">#</a> getSnapshotBeforeUpdate（）</h3><p>这个钩子 是 更新 DOM 之前，渲染之后，</p><ul><li>此钩子的返回值将作为参数，传递给 componentDidUpdate（）；</li><li>此方法不常用，滚动条固定可以使用这个，</li></ul></li></ul><h3 id="新生命周期" tabindex="-1"><a class="header-anchor" href="#新生命周期" aria-hidden="true">#</a> 新生命周期</h3><ul><li>挂载过程</li></ul><ol><li>constructor</li><li>getSnapshotBeforeUpdate()</li><li><strong>render</strong></li><li><strong>componentDidmount() //发请求，订阅消息，定时器开启</strong></li></ol><ul><li><p>更新过程 由 setState 触发，或者父组件传入 Props 触发</p><ol><li>getSnapshotBeforeUpdate()</li><li>shouldComponentUpdate()</li><li><strong>render</strong></li><li>getSnapshotBeforeUpdate()</li><li>componentDidUpdate()</li></ol></li><li><p>卸载过程</p><ol><li><strong>componentWillUnmount()</strong></li></ol></li></ul><p>即将废弃的钩子</p><ul><li><p>componentWillUpdate();</p></li><li><p>componentWillMount();</p></li><li><p>componentReviceProps();</p><p>必须加上 UNSAFE 才能使用，未来可能废弃了，这三个钩子也不常用</p></li></ul>',14),a=[p];function n(r,s){return t(),i("div",null,a)}const d=e(l,[["render",n],["__file","新生命周期.html.vue"]]);export{d as default};
