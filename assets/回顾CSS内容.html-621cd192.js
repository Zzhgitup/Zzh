import{_ as p,o as e,c as a,f as t,e as r}from"./app-bebbc25d.js";const n={},o=r('<p><strong>目录</strong></p><p><a href="#1.%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90">1.弹性盒子</a></p><p><a href="#2.%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE">2.文本标签</a></p><p><a href="#3.%E5%AE%9A%E4%BD%8D">3.定位</a></p><hr><h2 id="_1-弹性盒子" tabindex="-1"><a class="header-anchor" href="#_1-弹性盒子" aria-hidden="true">#</a> 1.弹性盒子</h2><p>flex</p><p>flex-direction 指定容器中弹性元素的排列方式；</p><p>主轴由 flex 的设置的方向决定；</p><p>flex-grow 指定弹性元素伸展的系数默认值是零；</p><p>当父元素有多余的空间时子元素如何伸展，0 就是不伸展，</p><p>要是把 flex-grow 写入子元素，则子元素按照 flex-grow 的比值被分配剩余空白部分</p><p>flex-shrink 表示收缩系数。当父元素不足以容纳子元素时对子元素进行收缩</p><p>当值为零的时候就是不收缩，当外面的框小的时候内容会溢出</p><p>这时使用 flex-wrap：wrap；多出的部分会沿着辅轴方向排列</p><p>flex-flow 是简写属性</p><p>justify-content</p><p>如何分配空白区域</p><p>flex-start 元素沿着主轴起边排列</p><p>flex-end 元素沿着主轴终边排列</p><p>center 元素居中排列</p><p>sparce-between 空白均匀分布到元素间</p><p>spare-around 空白分布到元素两侧。</p><p>在纵向上 align-item</p><p>中 stretch 属性把元素的长度设置为相同的值；</p><p>指的是行与行之间的高度</p><p>flex-start：元素不会拉伸，沿着辅轴起边方向对齐</p><p>flex-end：沿着辅轴终边对齐</p><p>flex-baseline：沿着基线对齐就是文字底边的基线。</p><p>在纵轴上分配空白空间</p><p>用 align-conent：</p><p>和横着的一样。</p><p>设置弹性元素的属性</p><p>flex-basic:可以设置弹性元素的基础长度；</p><p>如果主轴是纵向的则设置的是高度；</p><h2 id="_2-文本标签" tabindex="-1"><a class="header-anchor" href="#_2-文本标签" aria-hidden="true">#</a> 2.文本标签</h2><p>html 格式化标签粗体表示重要性（内容的重要性）或者斜体表示着重点（语气上的强调）表示你要呈现的文章时重要的所以要突出显示 一个粗体，一个斜体</p><p>与是定义粗体或斜体文本与上面的那两个是不一样的</p><p>cite 标签：网站中所有加书名号的内容都可以使用 cite 标签</p><p>《XXX》</p><p>短引用标签的内容浏览器会默认给他加上一个“”</p><p>blockquote 长引用（块级引用不能放在中）</p><p>独占一行</p><p>sup 标签用来表示一个上标；</p><p>sub 标签用来表示一个下标；</p><p>del 标签用来表示一个删除的内容画一个横线</p><p>ins 表示插入一个内容插入的内容有下划线</p><p>pre 标签时预格式标签保留了格式；</p><p>code 专门用来表示代码的标签</p><h2 id="_3-定位" tabindex="-1"><a class="header-anchor" href="#_3-定位" aria-hidden="true">#</a> 3.定位</h2><p>通过 position 属性</p><p>relative 是相对定位</p><p>当开启元素相对定位时，而不设置偏移量。和没有设置一样</p><p>2：开启后可以通过，left right top bottom 四个属性设置元素的偏移量。</p><p>是相对与原来位置移动的。</p><p>3：相对定位的元素不会脱离文档流。原来的位置虽然是空的但还占位置。</p><p>4：相对定位会使元素提升一个层级。会覆盖其他元素。</p><p>通常偏移量使用两个就可以对一个元素进行定位。</p><p>相对定位，不会该改变元素的性质，块还是块，内联还是内联</p><p>绝对定位 absolute</p><p>开启绝对定位后脱离文档流</p><p>开启绝对定位后</p><p>而且是相对于浏览器窗口定位的</p><p>3：绝对定位是相对于离他最近的的开启了定位的祖先元素定位的</p><p>（一般情况开启子元素的绝对定位，也会开启祖先元素的绝对定位。）</p><p>4：如果所有的祖先元素都未开启定位，则会相对于浏览器窗口定位。</p><p>5：绝对定位会使元素提升一个层级</p><p>6：定位会改变元素的性质</p><p>内联元素变成块元素，块元素的宽度和高度默认被内容撑开</p><p>固定定位 fixed</p><p>position 也是一种绝对定位</p><p>它的大部分特点都和绝对定位一样</p><p>不同的是：</p><p>固定定位永远会相对于浏览器窗口进行定位</p><p>固定定位会固定在浏览器窗口的某个位置，不会随滚顶条滚动</p>',75);function i(l,s){return e(),a("div",null,[t("more"),o])}const f=p(n,[["render",i],["__file","回顾CSS内容.html.vue"]]);export{f as default};
